#BlueJ class context
comment0.params=
comment0.target=Sorter()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ SortingAlgorithm\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=n
comment10.target=int\ heap(int)
comment10.text=\r\n\ heap\ sort\ ***Working\ but\ take\ away\ static\ variables\r\n\ uses\ heapify\ method\ to\ create\ heap,\ maxheap\ to\ swap\ largest\ in\ heap\r\n\ @param\ n\ \=\ number\ of\ elements\r\n\ @ret\ count\ \=\ number\ of\ comparisons\r\n
comment11.params=intArray
comment11.target=int[]\ buildHeap(int[])
comment12.params=intArray\ i
comment12.target=void\ maxheap(int[],\ int)
comment13.params=a\ p\ r
comment13.target=int\ quick(int[],\ int,\ int)
comment13.text=\r\n\ Quick\ Sort\ Working\r\n\ Work\ around\ static\ variable\r\n\ Make\ a\ generic\ quick\ method\r\n
comment14.params=a\ p\ r
comment14.target=int\ partition(int[],\ int,\ int)
comment15.params=intArray\ indexA\ indexB
comment15.target=int[]\ swap(int[],\ int,\ int)
comment15.text=\r\n\ method\ to\ swap\ a\ and\ b\r\n
comment16.params=n
comment16.target=int[]\ createListRand(int)
comment17.params=n
comment17.target=int[]\ createListOrd(int)
comment18.params=n
comment18.target=int[]\ createGapsShell(int)
comment18.text=\r\n\ Method\ to\ create\ gap\ array\ for\ Shell\r\n\ n/2^k\r\n
comment19.params=n
comment19.target=int[]\ createGapsHibbard(int)
comment19.text=\r\n\ Method\ to\ create\ gap\ array\ for\ Hibbard\r\n\ //2^k\ -\ 1\r\n
comment2.params=n
comment2.target=int\ selection(int)
comment2.text=\r\n\ selection\ method\r\n\ @ret\ returns\ number\ of\ comparisons\r\n\ @param\ amount\ of\ random\ entries\r\n
comment20.params=n
comment20.target=int[]\ createGapsKnuth(int)
comment20.text=\r\n\ Method\ to\ create\ gap\ array\ for\ Knuth\r\n\ (3^k\ -\ 1)\ /\ 2\r\n
comment21.params=n
comment21.target=int[]\ createGapsSedgewick(int)
comment21.text=\r\n\ Method\ to\ create\ gap\ array\ for\ Sedgewick\r\n\ 4^k\ +\ 3*2^(k-1)\ +\ 1\r\n
comment22.params=n
comment22.target=void\ testSelection(int)
comment23.params=n
comment23.target=void\ testInsertion(int)
comment24.params=n
comment24.target=void\ testHeap(int)
comment25.params=n
comment25.target=void\ testShell(int)
comment26.params=n
comment26.target=void\ testShellHibbard(int)
comment27.params=n
comment27.target=void\ testShellKnuth(int)
comment28.params=n
comment28.target=void\ testShellSedgewick(int)
comment29.params=
comment29.target=void\ testBuildHeap()
comment3.params=n
comment3.target=int\ insertion(int)
comment3.text=\r\n\ sort\ working\r\n
comment30.params=n
comment30.target=void\ testGapsShell(int)
comment31.params=n
comment31.target=void\ testGapsHibbard(int)
comment32.params=n
comment32.target=void\ testGapsKnuth(int)
comment33.params=n
comment33.target=void\ testGapsSedgewick(int)
comment34.params=n
comment34.target=void\ testQuick(int)
comment4.params=n
comment4.target=int\ shellWorking(int)
comment4.text=\r\n\ working\ where\ count?\r\n
comment5.params=n
comment5.target=int\ shell(int)
comment5.text=\r\n\ shell\ method\ Working\r\n\ fix\ conditional\ while\r\n\ ~92\ comparisons\r\n
comment6.params=n
comment6.target=int\ shellHibbard(int)
comment6.text=\r\n\ Shell\ Hibbard\ Sort\ working\r\n\ Needs\ fix\:\ go\ through\ loop\ fix\ while\ statement\r\n
comment7.params=n
comment7.target=int\ shellSedgewick(int)
comment7.text=\r\n\ shell\ Sedgewick\ Sort\ not\ working\r\n\ Fix\ go\ through\ loop\ to\ fix\ while\ statement\r\n
comment8.params=n
comment8.target=int\ shellGonnet(int)
comment8.text=\r\n\ shell\ Sedgewick\ not\ Gonnet\r\n\ Used\ as\ placeholder\r\n
comment9.params=n
comment9.target=int\ shellKnuth(int)
comment9.text=\r\n\ shell\ knuth\ Sort\ Working\r\n\ Fix\ go\ through\ loop\ to\ fix\ while\ statement\r\n\ Too\ many\ Comparisons\r\n
numComments=35
